{"ast":null,"code":"import { computed, defineComponent, watch } from 'vue';\nexport default defineComponent({\n  name: 'ECheckbox',\n  props: {\n    modelValue: {},\n    terminated: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    // watch(() => props.modelValue, (val) => {\n    //     console.log(val);\n    // });\n\n    const isChecked = computed(() => {\n      return props.modelValue;\n    });\n    const isTerminated = computed(() => {\n      return props.terminated;\n    });\n    const inputChanged = e => {\n      // Проверяем, действительно ли произошло изменение. Если нет - форсируем изменения\n      if (props.modelValue === e.target.checked) {\n        emit('update:modelValue', !e.target.checked);\n      } else {\n        emit('update:modelValue', e.target.checked);\n      }\n    };\n    return {\n      isTerminated,\n      isChecked,\n      inputChanged\n    };\n  }\n});","map":{"version":3,"names":["computed","defineComponent","watch","name","props","modelValue","terminated","type","Boolean","default","setup","emit","isChecked","isTerminated","inputChanged","e","target","checked"],"sources":["C:\\Users\\ivanov_n\\IdeaProjects\\netology-diplom-frontend\\src\\components\\elements\\ECheckbox.vue"],"sourcesContent":["<template>\r\n  <label :class=\"{\r\n            'e-checkbox--checked': isChecked,\r\n            'e-checkbox--terminated': isTerminated\r\n         }\"\r\n         class=\"e-checkbox\">\r\n    <input :value=\"modelValue\"\r\n           class=\"e-checkbox__input\"\r\n           type=\"checkbox\"\r\n           @change=\"inputChanged\">\r\n  </label>\r\n</template>\r\n\r\n<script>\r\nimport {computed, defineComponent, watch} from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'ECheckbox',\r\n  props: {\r\n    modelValue: {},\r\n    terminated: {\r\n      type: Boolean,\r\n      default: false,\r\n    }\r\n  },\r\n  setup(props, {emit}) {\r\n    // watch(() => props.modelValue, (val) => {\r\n    //     console.log(val);\r\n    // });\r\n\r\n    const isChecked = computed(() => {\r\n      return props.modelValue;\r\n    });\r\n\r\n    const isTerminated = computed(() => {\r\n      return props.terminated;\r\n    });\r\n\r\n    const inputChanged = (e) => {\r\n      // Проверяем, действительно ли произошло изменение. Если нет - форсируем изменения\r\n      if (props.modelValue === e.target.checked) {\r\n        emit('update:modelValue', !e.target.checked)\r\n      } else {\r\n        emit('update:modelValue', e.target.checked)\r\n      }\r\n    };\r\n\r\n    return {\r\n      isTerminated,\r\n      isChecked,\r\n      inputChanged\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"@/styles/_variables.scss\";\r\n\r\n.e-checkbox {\r\n  border: 3px solid #c4c4c4;\r\n  display: block;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: transparent;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n\r\n  &--checked {\r\n    border-color: $color-primary;\r\n    background-color: $color-primary;\r\n    background-image: url('assets');\r\n    background-repeat: no-repeat;\r\n    background-position: 50%;\r\n    background-size: 80%;\r\n  }\r\n\r\n  &--terminated {\r\n    border-color: $color-primary;\r\n  }\r\n\r\n  &__input {\r\n    display: none;\r\n  }\r\n}\r\n</style>"],"mappings":"AAcA,SAAQA,QAAQ,EAAEC,eAAe,EAAEC,KAAK,QAAO,KAAK;AAEpD,eAAeD,eAAe,CAAC;EAC7BE,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,UAAU,EAAE,CAAC,CAAC;IACdC,UAAU,EAAE;MACVC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAKA,CAACN,KAAK,EAAE;IAACO;EAAI,CAAC,EAAE;IACnB;IACA;IACA;;IAEA,MAAMC,SAAQ,GAAIZ,QAAQ,CAAC,MAAM;MAC/B,OAAOI,KAAK,CAACC,UAAU;IACzB,CAAC,CAAC;IAEF,MAAMQ,YAAW,GAAIb,QAAQ,CAAC,MAAM;MAClC,OAAOI,KAAK,CAACE,UAAU;IACzB,CAAC,CAAC;IAEF,MAAMQ,YAAW,GAAKC,CAAC,IAAK;MAC1B;MACA,IAAIX,KAAK,CAACC,UAAS,KAAMU,CAAC,CAACC,MAAM,CAACC,OAAO,EAAE;QACzCN,IAAI,CAAC,mBAAmB,EAAE,CAACI,CAAC,CAACC,MAAM,CAACC,OAAO;MAC7C,OAAO;QACLN,IAAI,CAAC,mBAAmB,EAAEI,CAAC,CAACC,MAAM,CAACC,OAAO;MAC5C;IACF,CAAC;IAED,OAAO;MACLJ,YAAY;MACZD,SAAS;MACTE;IACF,CAAC;EACH;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}