{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"label\", {\n    class: _normalizeClass([{\n      'e-checkbox--checked': _ctx.isChecked,\n      'e-checkbox--terminated': _ctx.isTerminated\n    }, \"e-checkbox\"])\n  }, [_createElementVNode(\"input\", {\n    value: _ctx.modelValue,\n    class: \"e-checkbox__input\",\n    type: \"checkbox\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.inputChanged && _ctx.inputChanged(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_1)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","_ctx","isChecked","isTerminated","_createElementVNode","value","modelValue","type","onChange","_cache","args","inputChanged"],"sources":["C:\\Users\\ivanov_n\\IdeaProjects\\CloudStorageApplication\\netology-diplom-frontend\\src\\components\\elements\\ECheckbox.vue"],"sourcesContent":["<template>\r\n  <label :class=\"{\r\n            'e-checkbox--checked': isChecked,\r\n            'e-checkbox--terminated': isTerminated\r\n         }\"\r\n         class=\"e-checkbox\">\r\n    <input :value=\"modelValue\"\r\n           class=\"e-checkbox__input\"\r\n           type=\"checkbox\"\r\n           @change=\"inputChanged\">\r\n  </label>\r\n</template>\r\n\r\n<script>\r\nimport {computed, defineComponent, watch} from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'ECheckbox',\r\n  props: {\r\n    modelValue: {},\r\n    terminated: {\r\n      type: Boolean,\r\n      default: false,\r\n    }\r\n  },\r\n  setup(props, {emit}) {\r\n    // watch(() => props.modelValue, (val) => {\r\n    //     console.log(val);\r\n    // });\r\n\r\n    const isChecked = computed(() => {\r\n      return props.modelValue;\r\n    });\r\n\r\n    const isTerminated = computed(() => {\r\n      return props.terminated;\r\n    });\r\n\r\n    const inputChanged = (e) => {\r\n      // Проверяем, действительно ли произошло изменение. Если нет - форсируем изменения\r\n      if (props.modelValue === e.target.checked) {\r\n        emit('update:modelValue', !e.target.checked)\r\n      } else {\r\n        emit('update:modelValue', e.target.checked)\r\n      }\r\n    };\r\n\r\n    return {\r\n      isTerminated,\r\n      isChecked,\r\n      inputChanged\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"@/styles/_variables.scss\";\r\n\r\n.e-checkbox {\r\n  border: 3px solid #c4c4c4;\r\n  display: block;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: transparent;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n\r\n  &--checked {\r\n    border-color: $color-primary;\r\n    background-color: $color-primary;\r\n    //background-image: url('assets');\r\n    background-repeat: no-repeat;\r\n    background-position: 50%;\r\n    background-size: 80%;\r\n  }\r\n\r\n  &--terminated {\r\n    border-color: $color-primary;\r\n  }\r\n\r\n  &__input {\r\n    display: none;\r\n  }\r\n}\r\n</style>"],"mappings":";;;uBACEA,mBAAA,CASQ;IATAC,KAAK,EAAAC,eAAA;6BAAwCC,IAAA,CAAAC,SAAS;gCAAyCD,IAAA,CAAAE;OAI1F,YAAY;MACvBC,mBAAA,CAG8B;IAHtBC,KAAK,EAAEJ,IAAA,CAAAK,UAAU;IAClBP,KAAK,EAAC,mBAAmB;IACzBQ,IAAI,EAAC,UAAU;IACdC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,IAAA,CAAAU,YAAA,IAAAV,IAAA,CAAAU,YAAA,IAAAD,IAAA,CAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}